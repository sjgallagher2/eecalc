// Generated by Bisonc++ V4.13.01 on Sun, 09 Oct 2016 21:11:16 -0400

#ifndef Parser_h_included
#define Parser_h_included

// $insert baseclass
#include "Parserbase.h"
// $insert scanner.h
#include "Scanner.h"
#include <sstream>
#include <math.h>

#undef Parser
class Parser: public ParserBase
{
    // $insert scannerobject
    Scanner scanner;

    public:
        Parser();
        Parser(std::stringstream*, std::stringstream*);
        int parse();
        void setStreams(std::stringstream*, std::stringstream*);

    private:
        void error(char const *msg);    // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner.
        void print();                   // use, e.g., d_token, d_loc

    // support functions for parse():
        void executeAction(int ruleNr);
        void errorRecovery();
        int lookup(bool recovery);
        void nextToken();
        void print__();
        void exceptionHandler__(std::exception const &exc);
        std::stringstream * output_stream;
};


#endif
